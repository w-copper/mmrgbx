norm_cfg = dict(type="SyncBN", requires_grad=True)
data_preprocessor = dict(
    type="MultiInputSegDataPreProcessor",
    mean=[123.675, 116.28, 103.53],
    std=[58.395, 57.12, 57.375],
    bgr_to_rgb=False,
    size_divisor=32,
    pad_val=0,
    seg_pad_val=255,
    test_cfg=dict(size_divisor=32),
)
model = dict(
    type="MiscEncoderDecoder",
    data_preprocessor=data_preprocessor,
    pretrained=None,
    backbone=dict(
        type="LMFNet",
        input_k=2,
        encoder_dims=[32, 64, 160, 256],
        fuse_srs=[8, 4, 2, 1],
        fuse_heads=[8, 12, 16, 24],
        backbone=dict(
            type="MixVisionTransformer",
            in_channels=3,
            embed_dims=32,
            num_stages=4,
            num_layers=[2, 2, 2, 2],
            num_heads=[1, 2, 5, 8],
            patch_sizes=[7, 3, 3, 3],
            sr_ratios=[8, 4, 2, 1],
            out_indices=(0, 1, 2, 3),
            mlp_ratio=4,
            qkv_bias=True,
            drop_rate=0.0,
            attn_drop_rate=0.0,
            drop_path_rate=0.1,
        ),
    ),
    neck=None,
    decode_head=dict(
        type="mmseg.FCNHead",
        in_channels=256,
        in_index=3,
        channels=256,
        num_convs=1,
        concat_input=False,
        dropout_ratio=0.1,
        num_classes=13,
        align_corners=False,
        loss_decode=[
            dict(type="mmseg.CrossEntropyLoss", use_sigmoid=False, loss_weight=1.0),
            dict(type="mmseg.DiceLoss", loss_weight=0.4),
            dict(type="mmseg.FocalLoss", loss_weight=1.0),
        ],
    ),
    auxiliary_head=dict(
        type="mmseg.FCNHead",
        in_channels=160,
        in_index=2,
        channels=256,
        num_convs=1,
        concat_input=False,
        dropout_ratio=0.1,
        num_classes=13,
        align_corners=False,
        loss_decode=dict(
            type="mmseg.CrossEntropyLoss", use_sigmoid=False, loss_weight=0.4
        ),
    ),
    # model training and testing settings
    train_cfg=dict(),
    test_cfg=dict(mode="whole"),
)
